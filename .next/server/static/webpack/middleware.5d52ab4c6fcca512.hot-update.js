"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./middleware.ts":
/*!***********************!*\
  !*** ./middleware.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n\n// Define public routes that don't require authentication\nconst publicRoutes = [\n    '/landing',\n    '/faqs',\n    '/signin',\n    '/signup',\n    '/onboarding/step-1',\n    '/onboarding/step-2',\n    '/onboarding/step-3',\n    '/onboarding/step-4',\n    '/onboarding/step-5',\n    '/onboarding/step-6',\n    'policy-page',\n    '/about',\n    '/help',\n    '/verifyEmail',\n    '/forgot-password',\n    '/logout',\n    '/careers'\n];\n// Define protected routes that require authentication\nconst protectedRoutes = [\n    '/payment/planSelection',\n    '/payment/cardDetails',\n    '/payment/success',\n    '/payment/methodSlection',\n    '/payment/currencySelection',\n    '/dashboard',\n    '/admin/dashboard'\n];\nfunction middleware(request) {\n    const url = request.nextUrl.clone();\n    const { pathname } = url;\n    // Get the tokens from cookies and headers\n    const authCookie = request.cookies.get('authorization')?.value;\n    const tokenCookie = request.cookies.get('token')?.value;\n    const authHeader = request.headers.get('authorization');\n    const token = tokenCookie || (authHeader?.startsWith('Bearer ') ? authHeader.split(' ')[1] : null) || (authCookie?.startsWith('Bearer ') ? authCookie.split(' ')[1] : null);\n    console.log(token);\n    // STRICT DASHBOARD LOCK - Check this FIRST, before ANY other checks\n    if (request.cookies.get('dashboardLock')?.value === 'true') {\n        // Only allow dashboard and logout, block EVERYTHING else\n        if (pathname !== '/dashboard' && pathname !== '/logout') {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/dashboard', request.url));\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    }\n    // Check if the route is public\n    const isPublicRoute = publicRoutes.some((route)=>pathname === route || pathname.startsWith(route + '/'));\n    // If it's a public route, allow access immediately\n    if (isPublicRoute) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    }\n    // Check if the route is protected\n    const isProtectedRoute = protectedRoutes.some((route)=>pathname === route || pathname.startsWith(route + '/'));\n    // If it's a protected route and there's no token, redirect to signin\n    if (isProtectedRoute && !token) {\n        const url = new URL('/signin', request.url);\n        url.searchParams.set('from', pathname);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(url);\n    }\n    // If authenticated and on dashboard, set strict lock\n    if (pathname === '/dashboard' && token) {\n        const response = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n        response.headers.set('Cache-Control', 'no-store, no-cache, must-revalidate, proxy-revalidate');\n        response.headers.set('Pragma', 'no-cache');\n        response.headers.set('Expires', '0');\n        response.cookies.set('dashboardLock', 'true', {\n            path: '/'\n        });\n        return response;\n    }\n    // If authenticated and on admin dashboard, set strict lock\n    if (pathname === '/admin/dashboard' && token) {\n        const response = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n        response.headers.set('Cache-Control', 'no-store, no-cache, must-revalidate, proxy-revalidate');\n        response.headers.set('Pragma', 'no-cache');\n        response.headers.set('Expires', '0');\n        response.cookies.set('adminDashboardLock', 'true', {\n            path: '/'\n        });\n        return response;\n    }\n    // If admin dashboard lock is set, only allow admin dashboard and logout\n    if (request.cookies.get('adminDashboardLock')?.value === 'true') {\n        if (pathname !== '/admin/dashboard' && pathname !== '/logout') {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/admin/dashboard', request.url));\n        }\n    }\n    // Handle logout\n    if (pathname === '/logout') {\n        const response = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/signup', request.url));\n        // Clear all cookies\n        const cookies = request.cookies.getAll();\n        cookies.forEach((cookie)=>{\n            response.cookies.delete(cookie.name);\n        });\n        // Clear specific important cookies\n        response.cookies.delete('onboardingToken');\n        response.cookies.delete('token');\n        response.cookies.delete('authorization');\n        response.cookies.delete('adminDashboardLock');\n        response.cookies.delete('dashboardLock');\n        return response;\n    }\n    // Redirect /lading to /landing (typo fix)\n    if (pathname === '/') {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/landing', request.url));\n    }\n    // Handle verification URL redirect\n    if (pathname === '/signin' && url.hash.includes('verifyEmail')) {\n        // Extract businessId and token from hash\n        const hashParts = url.hash.split('/');\n        const businessId = hashParts[hashParts.length - 1].split('?')[0];\n        const token = url.hash.split('token=')[1];\n        // Redirect to verification page\n        url.pathname = `/verifyEmail/${businessId}`;\n        url.search = `?token=${token}`;\n        url.hash = '';\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(url);\n    }\n    // Store current step in cookie when on onboarding\n    if (pathname.startsWith('/onboarding/step-')) {\n        const currentStep = pathname.split('step-')[1];\n        const response = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n        response.cookies.set('currentStep', currentStep || '1', {\n            path: '/'\n        });\n        response.cookies.set('inOnboarding', 'true', {\n            path: '/'\n        });\n        return response;\n    }\n    // If trying to access dashboard while on onboarding, keep them on current step\n    if (pathname === '/dashboard' && request.cookies.get('inOnboarding')?.value === 'true') {\n        const currentStep = request.cookies.get('currentStep')?.value || '1';\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL(`/onboarding/step-${currentStep}`, request.url));\n    }\n    // Clear onboarding cookies when not in onboarding\n    if (!pathname.startsWith('/onboarding/')) {\n        const response = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n        response.cookies.delete('inOnboarding');\n        response.cookies.delete('currentStep');\n        return response;\n    }\n    // If there's a token, allow access\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n}\n// Configure which routes to run middleware on\n// export const config = {\n//   matcher: [\n//     /*\n//      * Match all request paths except for the ones starting with:\n//      * - api (API routes)\n//      * - _next/static (static files)\n//      * - _next/image (image optimization files)\n//      * - favicon.ico (favicon file)\n//      */\n//     '/((?!api|_next/static|_next/image|favicon.ico|.*\\\\.(png|jpg|jpeg|gif|webp|svg|ico|css|js)).*)',\n//   ],\n// } \nconst config = {\n    matcher: '/((?!api|_next/static|_next/image|favicon.ico|.*\\\\.(?:png|jpg|jpeg|gif|webp|svg|ico|css|js)).*)'\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./middleware.ts\n");

/***/ })

});